@mixin box-sizing($args) {
	-webkit-box-sizing: $args;
	-moz-box-sizing: $args;
	box-sizing: $args;
}

@mixin clear() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}

	&:after {
		clear: both;
	}
}

@mixin center($block: '') {
	margin-right: auto;
	margin-left: auto;

	@if $block == 'block' {
		display: block;
	}

	@if $block == 'v' {
		position: absolute;
		top: 50%;
		@include transform(translateY, -50%);
	}

	@if $block == 'v-h' {
		position: absolute;
		top: 50%;
		left: 0;
		right: 0;
		@include transform(translateY, -50%);
		display: block;
		margin-right: auto;
		margin-left: auto;
	}
}

@mixin transition($time: 1s, $property: all, $easing: cubic-bezier(.4,0,.2,1)) {
	@if ($property != transform) {
		-webkit-transition:  $property $time $easing;
		-moz-transition:     $property $time $easing;
		-o-transition:       $property $time $easing;
		transition:          $property $time $easing;
	} @else {
		-webkit-transition:  -webkit-+$property $time $easing;
		-moz-transition:     -moz-+$property $time $easing;
		-o-transition:       -o-+$property $time $easing;
		transition:          $property $time $easing;
	}
}

@mixin transform($function, $value) {
	-webkit-transform:  $function+"("+$value+")";
	-moz-transform:     $function+"("+$value+")";
	-ms-transform:      $function+"("+$value+")";
	-o-transform:       $function+"("+$value+")";
	transform:          $function+"("+$value+")";
}

@mixin background-opacity($color, $opacity: 0.5) {
	background: $color;
	background: rgba($color, $opacity);
}